#!/usr/bin/python
#Evan Widloski - 2013 - Purdue Menu Grabber

import urllib
import simplejson
import sys
import re
from datetime import datetime,timedelta

#General help and usage
def foodHelp():
  dining_courts=["earhart","ford","hillenbrand","wiley","windsor"]
  print "Usage: purdue_menu COURT BAR1 [BAR2] ..."
  print "To get a list of bars: purdue_menu COURT -h\n"
  print "Example usage: purdue_menu hillenbrand \"Granite Grill\""
  print "Example usage: purdue_menu earhart \"*\""
  print "Available dining courts: ",
  for dining_court in dining_courts:
    print dining_court+", ",

def main():
	acceptable_courts = ["hillenbrand","ford","wiley","earhart","windsor"]
	acceptable_mealtimes = ["Lunch","Dinner","Breakfast"]
	acceptable_days = {'sunday':6,'monday':0,'tuesday':1,'wednesday':2,'thursday':3,'friday':4,'saturday':5}

	params = sys.argv

	if len(params) < 2 or 'help' in params or '-h' in params:
		foodHelp('')
		return

	court = None
	meal = None
	day = None

	#grab the interesting bits of the arguments
	for param in params:
		if param.lower() in acceptable_courts:
			court = param.lower()
		if param.title() in acceptable_mealtimes:
			meal = param.title()
		if re.search('[0-9]{4}-[0-9]{2}-[0-9]{2}',param.lower()):
			day = datetime.strptime(param,'%Y-%m-%d')
		#handles optional weekday input
		if param.lower() in acceptable_days.keys():
			day = datetime.now()
			one_day = timedelta(days = 1)
			while day.weekday() != acceptable_days[param.lower()]:
					day += one_day

	#logic for dealing with missing input
	if not court:
		foodHelp('You must specify a dining court.')
		return
	#try to guess what mealtime user is interested in
	if not day:
		time = datetime.now()
		day = time
		if not meal:
			time = datetime.now()
			hour = int(time.strftime('%H'))
			print hour
			if hour > 19:
				meal = 'Breakfast'
			elif hour > 14:
				meal = 'Dinner'
			elif hour > 10:
				meal = 'Lunch'
			else:
				meal = 'Breakfast' 
	else:
		if not meal:
			foodHelp('You must specify a meal when you specify a day.')

	url = "http://api.hfs.purdue.edu/menus/v1/locations/"+court+"/"+day.strftime("%m-%d-%Y")
	json = simplejson.load(urllib.urlopen(url))

	#grab first 3 items from every bar
	items = [item["Name"] for bar in json[meal] for item in bar["Items"][:3]]
	if not items:
		items = ['Not Serving']
	message = court.title() + ' ' + meal.title() + ': ' + ', '.join(items[:10])
	print message

if __name__ == "__main__":
  main()
